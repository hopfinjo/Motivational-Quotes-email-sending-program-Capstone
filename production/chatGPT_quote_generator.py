from openai import OpenAI
import os


class chatGPT:
    """
    Handles all communication with chatGPT api. 
    Currently, there are two different functions to get quotes:
        - creatQuoteFirstTime
        - creatNewQuote
    """
    def __init__(self):
        # CHANGEME: For this program to work you need a paid API:subscription to chatgpt.
        # Important: API key! Not chatGPT + subscription. Replace placeholder below with private key.
        # This is very efficient. Currently creating one quote costs: less than 1 cent for 35 quotes.
        self.chatGPT_env_acces_key = "addKEyHERE"
        

    def createQuoteFirstTime(self):
        """
        Creates first Quote for user.

        Returns:
            String: Quote in " " followed by author of quote
        """

        os.environ["OPENAI_API_KEY"] = self.chatGPT_env_acces_key

        client = OpenAI()

        completion = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "You are a motivational, inspiring assistant, that draws from speeches and quotes from highly achieving people"},
                {"role": "user", "content": "Give me 1 motivational quote"}
            ]
        )

        first_quote = completion.choices[0].message.content
        print("First Quote was generated by Chatgpt")

        return first_quote

    def createNewQuote(self, oldquotes, keywords):
        """
        Creates a new Quote for a user, cosidering last used quotes to avoid repetition.

        Args:
            oldquotes (List[String]): List that holds the 15 last used quotes

        Returns:
            String: Quote in " " followed by author of quote
        """
        os.environ["OPENAI_API_KEY"] = self.chatGPT_env_acces_key
        client = OpenAI()
        
        all_quotes_concatenated = ''.join(oldquotes)
        all_keywords_concatenated = ''.join(keywords)
        if len(keywords) > 0:
                print("Quote with keywords was generated")
            # means make quote including keywords
                completion = client.chat.completions.create(
                model="gpt-3.5-turbo",
                messages=[
                    {"role": "system", "content": "You are a motivational&inspiring assitant. U draw from speeches and quotes from highly achieving peoplele in only following areas: "+all_keywords_concatenated},
                    {"role": "user", "content": "Give me 1 motivational quote but you already used following quotes:"+all_quotes_concatenated}
                ]
            )
            
            
            
        else:
            completion = client.chat.completions.create(
                model="gpt-3.5-turbo",
                messages=[
                    {"role": "system", "content": "You are a motivational, inspiring assitant, that draws from speeches and quotes from highly achieving people"},
                    {"role": "user", "content": "Give me 1 motivational quote but you already used following quotes"+all_quotes_concatenated}
                ]
            )

        new_quote = completion.choices[0].message.content
        print("New Quote was generated by Chatgpt")
        return new_quote

    
